[
{
	"uri": "https://kbatuigas.github.io/content-guide-template/01-tldr/",
	"title": "TL;DR",
	"tags": [],
	"description": "",
	"content": " This Content Guide goes into depth on many subjects. It may be more information than you need. Here are the most important things to know.\nPrinciples Good content is:\n Clear Useful Friendly Appropriate  Voice and tone Crunchy Data’s voice is:\n Genuine Planinspoken Accurate  Our priorities are to educate our users about our products without patronizing or confusing them, so they can get their work done and get on with their lives.\nGrammar and mechanics  Some people will read every word you write. Others will just scan. Help everyone by grouping related ideas together and using descriptive headers and subheaders. Focus your message, and create a hierarchy of information. Lead with the main point or the most important content. Use active voice and positive language. Use short words and sentences. Avoid unnecessary modifiers. Use specific examples. Avoid vague language. Be consistent. Adhere to the copy patterns and style points outlined in this guide. Feel free to use contractions. Use the serial comma. Otherwise, use common sense. Don’t use underline, and don’t use any combination of italic, bold, caps, and underline. When in doubt, read your writing out loud.  Web elements  Organize your page around one topic. Use clear, descriptive terms that relate to the topic in titles and headings. Give every image descriptive alt text. Use title case for main navigation. Use sentence case for subnavigation. Use title case for headings and sentence case for subheadings. Organize headings and subheadings in a hierarchy, with heading first, followed by subheadings in order. Include the most relevant keywords in your headings and subheadings. Provide a link whenever you’re referring to a website, relevant content, and trusted external resources. Don’t say things like “Click here!” or “Click for more information” or “Read this.” Instead, link relevant keywords. Use lists to present steps, groups, or sets of info. Set up your list with a brief introduction. Number lists when the order of information is important.  Writing for accessibility  Create a hierarchy, with the most important information first. Place similar topics in the same paragraph, and clearly separate different topics with headings. Use plain language. Write short sentences and familiar words. Links should provide information on the associated action or destination. Avoid saying “click here” or “learn more.” Avoid using images when descriptive text will do. Avoid directional instructions or language that requires the reader to see the layout or design of the page.  "
},
{
	"uri": "https://kbatuigas.github.io/content-guide-template/02-writing-principles/",
	"title": "Writing Goals and Principles",
	"tags": [],
	"description": "",
	"content": "With every piece of content we publish, we aim to:\n Empower. Help people understand Crunchy Data by using language that informs them and encourages them to make the most of our products.\n Respect. Treat readers with the respect they deserve. Put yourself in their shoes, and don’t patronize them. Remember that they have other things to do. Be considerate and inclusive. Don’t market at people; communicate with them.\n Educate. Tell readers what they need to know, not just what we want to say. Give them the exact information they need, along with opportunities to learn more. Remember that you’re the expert, and readers don’t have access to everything you know.\n Guide. Think of yourself as a tour guide for our readers. Whether you’re leading them through our educational materials or a task in our products, communicate in a friendly and helpful way.\n Speak truth. Understand Crunchy\u0026rsquo;s place in our users’ lives. Avoid dramatic storytelling and grandiose claims. Focus on our real strengths.\n  In order to achieve those goals, we make sure our content is:\n Clear. Understand the topic you’re writing about. Use simple words and sentences.\n Useful. Before you start writing, ask yourself: What purpose does this serve? Who is going to read it? What do they need to know?\n Friendly. Write like a human. Don’t be afraid to break a few rules if it makes your writing more relatable. All of our content, from product documentation to blog posts, should be warm and human.\n Appropriate. Write in a way that suits the situation. Just like you do in face-to-face conversations, adapt your tone depending on who you’re writing to and what you’re writing about.\n  "
},
{
	"uri": "https://kbatuigas.github.io/content-guide-template/03-voice-and-tone/",
	"title": "Voice and Tone",
	"tags": [],
	"description": "",
	"content": " Voice and Tone One way we write empowering content is by being aware of our voice and our tone. This section explains the difference between voice and tone, and lays out the elements of each as they apply to Crunchy.\nWhat’s the difference between voice and tone? Think of it this way: You have the same voice all the time, but your tone changes. You might use one tone when you\u0026rsquo;re out to dinner with your closest friends, and a different tone when you\u0026rsquo;re in a meeting with your boss.\nYour tone also changes depending on the emotional state of the person you’re addressing. You wouldn’t want to use the same tone of voice with someone who’s scared or upset as you would with someone who’s laughing.\nVoice At Crunchy, we’ve walked in our customers\u0026rsquo; shoes, and we know PostgreSQL and its related technologies can be a minefield of confusing terminology. That’s why we speak like the experienced and compassionate business partner we wish we’d had way back when.\nWe treat every user seriously. We want to educate people without patronizing or confusing them.\nWhether people know what they need from us or don’t know the first thing about Postgres, every word we say informs and encourages. We impart our expertise with clarity and empathy.\nAll of this means that when we write content:\n We are plainspoken. We value clarity above all. Because businesses come to Crunchy to get to work, we avoid distractions like fluffy metaphors and cheap plays to emotion.\n We are genuine. We relate to customers’ challenges and passions and speak to them in a familiar, warm, and accessible way.\n We are translators. Only experts can make what’s difficult look easy, and it’s our job to demystify database and open-source speak and actually educate.\n  Tone When you’re writing, consider the reader’s state of mind. Once you have an idea of their emotional state, you can adjust your tone accordingly.\nIt\u0026rsquo;s alright to be funny when it’s appropriate and when it comes naturally to you. But don’t go out of your way to make a joke—forced humor can be worse than none at all. If you’re unsure, keep a straight face.\nStyle tips Here are a few key elements of writing Crunchy’s voice. For more, see the Grammar and mechanics section.\n Active voice: Use active voice. Avoid passive voice. Avoid slang and jargon: Write in plain English. Write positively: Use positive language rather than negative language.  "
},
{
	"uri": "https://kbatuigas.github.io/content-guide-template/04-grammar-and-mechanics/",
	"title": "Grammar and Mechanics",
	"tags": [],
	"description": "",
	"content": " Adhering to certain rules of grammar and mechanics helps us keep our writing clear and consistent. This section will lay out our house style, which applies to all of our content unless otherwise noted in this guide. (We cover a lot of ground in this section—the search feature will help if you\u0026rsquo;re looking for something in particular.)\nBasics Write for all readers. Some people will read every word you write. Others will just skim. Help everyone read better by grouping related ideas together and using descriptive headers and subheaders.\nFocus your message. Create a hierarchy of information. Lead with the main point or the most important content, in sentences, paragraphs, sections, and pages.\nBe concise. Use short words and sentences. Avoid unnecessary modifiers.\nBe specific. Avoid vague language. Cut the fluff.\nBe consistent. Stick to the copy patterns and style points outlined in this guide.\nGuidelines Abbreviations and acronyms If there’s a chance your reader won’t recognize an abbreviation or acronym, spell it out the first time you mention it. Then use the short version for all other references. If the abbreviation isn’t clearly related to the full version, specify in parentheses.\n First use: Network Operations Center Second use: NOC First use: Coordinated Universal Time (UTC) Second use: UTC  If the abbreviation or acronym is well known, like API or HTML, use it instead (and don’t worry about spelling it out).\nActive voice Use active voice. Avoid passive voice.\nIn active voice, the subject of the sentence does the action. In passive voice, the subject of the sentence has the action done to it.\n Yes: Marti logged into the account. No: The account was logged into by Marti.  Words like “was” and “by” may indicate that you’re writing in passive voice. Scan for these words and rework sentences where they appear.\nOne exception is when you want to specifically emphasize the action over the subject. In some cases, this is fine.\n Your account was flagged by our abuse team.  Capitalization We use a few different forms of capitalization. Title case capitalizes the first letter of every word except articles, prepositions, and conjunctions. Sentence case capitalizes the first letter of the first word.\nWhen writing out an email address or website URL, use all lowercase.\n test@crunchydata.com crunchydata.com  Don\u0026rsquo;t capitalize random words in the middle of sentences. Here are some words that we never capitalize in a sentence. For more, see the Word List.\n website internet online email  Contractions They’re great! They give your writing an informal, friendly tone. In most cases, use them as you see fit. Avoid them if you\u0026rsquo;re writing content that will be translated for an international audience.\nEmoji Emoji are a fun way to add humor and visual interest to your writing, but use them infrequently and deliberately.\nNumbers Spell out a number when it begins a sentence. Otherwise, use the numeral. This includes ordinals.\n Ten new employees started on Monday, and 12 start next week. I ate 3 donuts at Coffee Hour. Meg won 1st place in last year’s Walktober contest. We hosted a group of 8th graders who are learning to code.  Sometimes it feels weird to use the numeral. If it\u0026rsquo;s an expression that typically uses spelled-out numbers, leave them that way.\n A friendly welcome email can help you make a great first impression. That is a third-party integration. Put your best foot forward with the all-in-one Marketing Platform that grows with you. After you send your newsletter, Freddie will give you a high-five.  Numbers over 3 digits get commas:\n 999 1,000 150,000  Write out big numbers in full. Abbreviate them if there are space restraints, as in a tweet or a chart: 1k, 150k.\nDates Generally, spell out the day of the week and the month. Abbreviate only if space is an issue in the app.\n Saturday, January 24 Sat., Jan. 24  Decimals and fractions Spell out fractions.\n Yes: two-thirds No: 2\u0026frasl;3  Use decimal points when a number can’t be easily written out as a fraction, like 1.375 or 47.2.\nPercentages Use the % symbol instead of spelling out \u0026ldquo;percent.\u0026rdquo;\nRanges and spans Use a hyphen (-) to indicate a range or span of numbers.\n It takes 20-30 days.  Money When writing about US currency, use the dollar sign before the amount. Include a decimal and number of cents if more than 0.\n $20 $19.99  When writing about other currencies, follow the same symbol-amount format:\n ¥1 €1  Telephone numbers Use dashes without spaces between numbers. Use a country code if your reader is in another country.\n 555-867-5309 +1-404-123-4567  Temperature Use the degree symbol and the capital F abbreviation for Fahrenheit.\n 98°F  Time Use numerals and am or pm, with a space in between. Don’t use minutes for on-the-hour time.\u2028 7 am\u2028 7:30 pm  Use a hyphen between times to indicate a time period.\u2028 7 am–10:30 pm  Specify time zones when writing about an event or something else people would need to schedule.\nAbbreviate time zones within the continental United States as follows:\n Eastern time: ET Central time: CT Mountain time: MT Pacific time: PT  When referring to international time zones, spell them out: Nepal Standard Time, Australian Eastern Time. If a time zone does not have a set name, use its Coordinated Universal Time (UTC) offset.\nAbbreviate decades when referring to those within the past 100 years.\n the 00s the 90s  When referring to decades more than 100 years ago, be more specific:\n the 1900s the 1890s  Punctuation Apostrophes The apostrophe’s most common use is making a word possessive. If the word already ends in an s and it’s singular, you also add an ‘s. If the word ends in an s and is plural, just add an apostrophe.\n The donut thief ate Sam’s donut. The donut thief ate Chris’s donut. The donut thief ate the managers’ donuts.  Apostrophes can also be used to denote that you’ve dropped some letters from a word, usually for humor or emphasis. This is fine, but do it sparingly.\nColons Use a colon (rather than an ellipsis, em dash, or comma) to offset a list.\n Erin ordered 3 kinds of donuts: glazed, chocolate, and pumpkin.  You can also use a colon to join 2 related phrases. If a complete sentence follows the colon, capitalize the 1st word.\n I was faced with a dilemma: I wanted a donut, but I’d just eaten a bagel.  Commas When writing a list, use the serial comma (also known as the Oxford comma).\u2028 Yes: David admires his parents, Oprah, and Justin Timberlake. No: David admires his parents, Oprah and Justin Timberlake.  Otherwise, use common sense. If you’re unsure, read the sentence out loud. Where you find yourself taking a breath, use a comma.\nDashes and hyphens Use a hyphen (-) without spaces on either side to link words into single phrase, or to indicate a span or range.\u2028 first-time user Monday-Friday  Use an em dash (—) without spaces on either side to offset an aside.\nUse a true em dash, not hyphens (- or \u0026ndash;).\n Multivariate testing—just one of our new Pro features—can help you grow your business. Austin thought Brad was the donut thief, but he was wrong—it was Lain.  Ellipses Ellipses (\u0026hellip;) can be used to indicate that you’re trailing off before the end of a thought. Use them sparingly. Don’t use them for emphasis or drama, and don’t use them in titles or headers.\n “Where did all those donuts go?” Christy asked. Lain said, “I don\u0026rsquo;t know\u0026hellip;”  Ellipses, in brackets, can also be used to show that you\u0026rsquo;re omitting words in a quote.\n “When in the Course of human events it becomes necessary for one people to dissolve the political bands which have connected them with another and to assume among the powers of the earth, [\u0026hellip;] a decent respect to the opinions of mankind requires that they should declare the causes which impel them to the separation.”  Periods Periods go inside quotation marks. They go outside parentheses when the parenthetical is part of a larger sentence, and inside parentheses when the parenthetical stands alone.\n Christy said, “I ate a donut.” I ate a donut (and I ate a bagel, too). I ate a donut and a bagel. (The donut was Sam’s.)  Leave a single space between sentences.\nQuestion marks Question marks go inside quotation marks if they’re part of the quote. Like periods, they go outside parentheses when the parenthetical is part of a larger sentence, and inside parentheses when the parenthetical stands alone.\nExclamation points Use exclamation points sparingly, and never more than one at a time. They’re like high-fives: A well-timed one is great, but too many can be annoying.\nExclamation points go inside quotation marks. Like periods and question marks, they go outside parentheses when the parenthetical is part of a larger sentence, and inside parentheses when the parenthetical stands alone.\nNever use exclamation points in failure messages or alerts. When in doubt, avoid!\nQuotation marks Use quotes to refer to words and letters, titles of short works (like articles and poems), and direct quotations.\nPeriods and commas go within quotation marks. Question marks within quotes follow logic—if the question mark is part of the quotation, it goes within. If you’re asking a question that ends with a quote, it goes outside the quote.\nUse single quotation marks for quotes within quotes.\n Who was it that said, “A fool and his donut are easily parted”? Brad said, “A wise man once told me, ‘A fool and his donut are easily parted.’”  Semicolons Go easy on semicolons. They usually support long, complicated sentences that could easily be simplified. Try an em dash (—) instead, or simply start a new sentence.\nAmpersands Don\u0026rsquo;t use ampersands unless one is part of a company or brand name.\n Ben and Dan Ben \u0026amp; Jerry’s  People, places, and things File extensions When referring generally to a file extension type, use all uppercase without a period. Add a lowercase s to make plural.\n GIF PDF HTML JPGs  When referring to a specific file, the filename should be lowercase:\n slowclap.gif MCBenefits.pdf ben-twitter-profile.jpg ilovedonuts.html  Pronouns If your subject’s gender is unknown or irrelevant, use “they,” “them,” and “their” as a singular pronoun. Use “he/him/his” and “she/her/her” pronouns as appropriate. Don’t use “one” as a pronoun.\nFor more on writing about gender, see Writing about people.\nQuotes When quoting someone in a blog post or other publication, use the present tense.\n “Working with Crunchy Data has helped our business grow,” says Jamie Smith.  Names and titles The first time you mention a person in writing, refer to them by their first and last names. On all other mentions, refer to them by their first name.\nCapitalize the names of departments and teams (but not the word \u0026ldquo;team\u0026rdquo; or \u0026ldquo;department\u0026rdquo;).\n Marketing team Support department  Capitalize individual job titles when referencing to a specific role. Don\u0026rsquo;t capitalize when referring to the role in general terms.\n Our new Marketing Manager starts today. All the managers ate donuts.  Don\u0026rsquo;t refer to someone as a “ninja,” “rockstar,” or “wizard” unless they literally are one.\nStates, cities, and countries Spell out all city and state names. Don’t abbreviate city names.\nPer AP Style, all cities should be accompanied by their state, with the exception of: Atlanta, Baltimore, Boston, Chicago, Cincinnati, Cleveland, Dallas, Denver, Detroit, Honolulu, Houston, Indianapolis, Las Vegas, Los Angeles, Miami, Milwaukee, Minneapolis, New Orleans, New York, Oklahoma City, Philadelphia, Phoenix, Pittsburgh, St. Louis, Salt Lake City, San Antonio, San Diego, San Francisco, Seattle, Washington.\nOn first mention, write out United States. On subsequent mentions, US is fine. The same rule applies to any other country or federation with a common abbreviation (European Union, EU; United Kingdom, UK).\nURLs and websites Capitalize the names of websites and web publications. Don’t italicize.\nAvoid spelling out URLs, but when you need to, leave off the http://www.\nWriting about Crunchy Data Our company\u0026rsquo;s legal entity name is \u0026ldquo;\u0026rdquo; Our trade name is \u0026ldquo;Crunchy Data.\u0026rdquo; Use \u0026ldquo;\u0026rdquo; only when writing legal documents or contracts. Otherwise, use \u0026ldquo;Crunchy Data.\u0026rdquo;\nAlways capitalize the first “C” and the “D” in Crunchy Data.\nRefer to Crunchy Data as “we,” not “it.”\nCapitalize branded terms, like Crunchy Certified. Don’t capitalize descriptive product or feature names, like email or landing pages.\nWriting about other companies Honor companies’ own names for themselves and their products. Go by what’s used on their official website.\n iPad YouTube Yahoo!  Refer to a company or product as “it” (not “they”).\nSlang and jargon Write in plain English. If you need to use a technical term, briefly define it so everyone can understand.\nText formatting Use italics to indicate the title of a long work (like a book, movie, or album) or to emphasize a word.\n Dunston Checks In Brandon really loves Dunston Checks In.  Use italics when citing an example of an in-app Crunchy Data element, or referencing button and navigation labels in step-by-step instructions:\n When you\u0026rsquo;re all done, click Send. The familiar A/B testing variables—Subject line, From name, and *Send time*—have now been joined by Content, and up to 3 combinations of a single variable can now be tested at once.  Don’t use underline formatting, and don’t use any combination of italic, bold, caps, and underline.\nLeft-align text, never center or right-aligned.\nLeave one space between sentences, never 2.\nWrite positively Use positive language rather than negative language. One way to detect negative language is to look for words like “can’t,” “don’t,” etc.\n Yes: To get a donut, stand in line. No: You can’t get a donut if you don’t stand in line.  "
},
{
	"uri": "https://kbatuigas.github.io/content-guide-template/05-web-elements/",
	"title": "Web Elements",
	"tags": [],
	"description": "",
	"content": " Every piece of content we publish is supported by a number of smaller pieces. This section lays out our style in regards to these web elements, and explains our approach to the tricky art of SEO.\nGuidelines Alt text Alt text is a way to label images, and it\u0026rsquo;s especially important for people who can’t see the images on our website. Alt text should describe the image in a brief sentence or two.\nFor more on how and why we use alt text, read the Accessibility section.\nHeadings and subheadings ***Making content \u0026ldquo;shareable\u0026rdquo; also goes under here? (e.g. anchor links for headers?)\nHeadings and subheadings organize content for readers and make it scannable, like a newspaper. Be generous and descriptive.\nHeadings (H1) give people a taste of what they’re about to read. Use them for page and blog titles.\nSubheadings (H2, H3, etc.) break pages into smaller, more specific sections. They give readers avenues into your content and make it more scannable.\nHeadings and subheadings should be organized in a hierarchy, with heading first, followed by subheadings in order. (An H2 will nestle under H1, an H3 under H2, and on down.)\nInclude the most relevant keywords in your headings and subheadings, and make sure you cover the main point of the content.\nUse title case, unless the heading is a punctuated sentence. If the heading is a punctuated sentence, use sentence case. Use sentence case for subheadings regardless of end punctuation.\nLinks Provide a link whenever you’re referring to something on an external website. Use links to point users to relevant content and trusted external resources.\nDon’t include preceding articles (a, an, the, our) when you link text. For example:\n Yes: Read the user guide for details. No: Read the user guide for details.  If a link comes at the end of a sentence or before a comma, don’t link the punctuation mark.\nDon’t say things like “Click here!” or “Click for more information” or “Read this.” Write the sentence as you normally would, and link relevant keywords.\nLinks should look different than regular copy, strong text, or emphasis text. They should have a hover state that communicates they’re interactive, and should have a distinct active and visited state. When setting the hover state of links, be sure to include focus state as well, to help readers using assistive technologies and touch devices.\nLists Use lists to present steps, groups, or sets of information. Give context for the list with a brief introduction. Number lists when the order is important, like when you’re describing steps of a process. Don’t use numbers when the list’s order doesn’t matter.\nIf one of the list items is a complete sentence, use proper punctuation and capitalization on all of the items. If list items are not complete sentences, don’t use punctuation, but do capitalize the first word of each item.\nNavigation Use title case for main or global navigation. Use sentence case for subnavigation.\nNavigation links should be clear and concise.\nRadio Buttons Use title case for headings and sentence case for button fields.\nRelated articles Sometimes a long piece of copy lends itself to a list of related links at the end. Don’t go overboard—4 is usually plenty.\nRelated articles should appear in a logical order, following the step down/step up rule: The first article should be a step down in complexity from the current article. The second one should be a step up in complexity to a more advanced article.\nIf you can, avoid repeating links from the body text in related articles.\nTitles Titles organize pages and guide readers. A title appears at the beginning of a page or section and briefly describes the content that follows.\nTitles are (you guessed it) in title case.\nDon’t use punctuation in a title unless the title is a question.\nSEO We write for humans, not machines. While we wouldn\u0026rsquo;t want to resort to keyword stuffing just to bump up search results, we also want to make it easy for people and search engines to find and share our content. Here are some not-icky ways to do this:\n Organize your page around one topic. Use clear, descriptive terms in titles and headings that relate to the topic at hand.\n Use descriptive headings to structure your page and highlight important information.\n Give every image descriptive alt text.\n  "
},
{
	"uri": "https://kbatuigas.github.io/content-guide-template/06-writing-technical-content/",
	"title": "Writing Technical Content",
	"tags": [],
	"description": "",
	"content": " At Crunchy, technical content appears primarily in our Access portal, our project repositories, our blog, and our interactive Learning Portal. This section will lay out the guiding principles of technical content, briefly discuss the main types of technical content, and outline the process of writing and editing technical articles.\nBasics Someone reading technical content is usually looking to answer a specific question. That question might be broad or narrowly focused, but either way our goal is to provide answers without distraction.\nFor each project, consider your audience’s background, goal, and current mood. Ask these questions:\n Is the reader a prospective user, a new user, or an experienced user? What is the goal of the user? To complete a task? To research a topic? Is the user in the middle of a task? Are they in a hurry? Could they be frustrated?  We don’t want to overload our audience with unnecessary information, choices, or complex ideas or phrases when we don’t have to. This is particularly critical when a user may be new and/or frustrated.\nWhen relevant, provide a brief outline of an article’s focus in an introductory paragraph or section, and stick to the topic at hand. Keep sentences, paragraphs, and procedural steps focused and concise.\nTypes of technical content Technical content articles vary in target audience, goal, and tone. Here are the main types of technical content we create:\n   Type User Goal     Documentation\n- Reference guide\n- User guide\n- README prospective, new, intermediate, advanced Helps the reader understand what the product does, and how to use it.\n- Reference guide: - User guide: Provide a high-level explanation of what the feature is, how it works, and its benefit to the user. Walks through installation, deployment, and common usage. Include links to relevant tutorials.\n- README: Explains what the project is, and how developers can use and engage with the project.   Blog post prospective, new, intermediate    Learning portal course\n(learn.crunchydata.com) prospective, new, intermediate     Some general guidelines are described below. For guidelines specific to a type of article, check out the relevant page using the navigation menu.\nGuidelines Writing technical content When writing technical content, follow the style points outlined in the Voice and tone and Grammar and mechanics sections. Here are some other goals and pointers to keep in mind.\nStay relevant to the title When a user clicks the title of an article, they expect to find the answer they want. Don’t stray too far from the title or topic at hand. Use links to make related content available. If you find you’re getting too far from the intended topic, then you may need to create a separate but related article.\nKeep headlines and paragraphs short and scannable Focused users often scan an article for the part that will answer their particular question. Be sure headings are short, descriptive, and parallel, to facilitate scanning.\nUse second person and describe actions to a user Technical content talks to users when support agents can’t.\nStrive for simplicity and clarity Be as clear as possible. Use simple words and phrases, avoid gerunds and hard-to-translate idioms or words, focus on the specific task, limit the number of sentences per paragraph. If you must include edge cases or tangentially related information, set it aside in a Before You Start list or Notes field.\nProvide context through embedded screenshots, videos, and GIFs Screenshots, videos, and GIFs may not be necessary for every article or process, but can be helpful to orient new users. Crop screenshots tightly around the action to focus attention.\nFormatting technical content Technical content uses organization, capitalization, and other formatting to help convey meaning. Although blog articles are organized differently, some formatting tips are consistent throughout all technical content.\nCapitalization Capitalize proper names of Crunchy Data products, features, pages, tools, and teams when directly mentioned.\nIn step-by-step instructions, capitalize and bold navigation and button labels as they appear in the app.\n   Headings Organize content with H2s and H3s. Use H2s for higher-level topics or goals, and use H3s within each section for supporting information or tasks.\nName or Title:\n H2: H2: H2:  H3: H3: H3:   Ordered Lists Only use ordered lists for step-by-step instructions. Separate steps into logical chunks, with no more than 2 related actions per step. When additional explanation or a screenshot is necessary, use a line break inside the list item.\nUnordered Lists Use unordered lists to display examples or multiple notes. If an unordered list comprises more than 10 items, use a table instead.\n"
},
{
	"uri": "https://kbatuigas.github.io/content-guide-template/07-writing-user-guides/",
	"title": "Writing User Guides",
	"tags": [],
	"description": "",
	"content": " Writing User Guides A user guide provides information that a user would need in day-to-day use of the product. User guides may have a little bit more of a \u0026ldquo;narrative\u0026rdquo; voice compared to reference guides and READMEs.\nGuidelines Users come first It\u0026rsquo;s important that the user guide is written with the audience in mind.\n Who are your users? Are they developers, sysadmins, or DBAs? What skills and knowledge level do they already have related to the product? What do your users do on a daily basis? How does the product fit into their work?  Make it scannable and easy to navigate The reader may not be going through the user guide in a linear way, especially if they are looking for information about a specific task. Include a table of contents that also allows the reader to jump to a particular section.\nUser guides are typically less terse than reference guide, but you should still avoid walls of text.\nIt\u0026rsquo;s not an encyclopedia The user guide does not have to contain every single piece of information about everything to do with your product. Remember that this document is primarily meant to support day-to-day use. For example, some developer-specific content can go in a README instead of the user guide.\nDon\u0026rsquo;t skimp on the details For the information that does make it to the user guide, be appropriately thorough. If completing a task requires a series of actions, err on the side of being explicit (e.g. number each step in the right order, and include no more than two actions per step).\nTemplate We have a user guide template available that you can check out. Feel free to reference or download and use the files as you see fit for your project.\n"
},
{
	"uri": "https://kbatuigas.github.io/content-guide-template/08-writing-readmes/",
	"title": "Writing READMEs",
	"tags": [],
	"description": "",
	"content": " Writing READMEs A README is a single file (typically .txt, or .md) that introduces the reader to the project repository and source code.\nLike user guides, a README informs the reader what a project is for and how to use it. That said, the target audience for READMEs is more specific: developers (both on your project\u0026rsquo;s team as well as outside), and potentially other end users who are comfortable with code. READMEs can also contain additional information that doesn\u0026rsquo;t necessarily belong in a user guide, such as acknowledgements, licensing, etc.\nGuidelines Help the reader identify the project  At the top of the README, make sure the project\u0026rsquo;s name is the first heading. Add a URL for the project (e.g. a product landing page). Identify the owner/s or author/s of the project.  Help the reader evaluate the project Provide a description that focuses on the why:\n What is this project? How does it work? Who will find it useful, and why?  What differentiates your project from alternatives? What is this project not good for?   With that said, you might also include (after addressing the above!):\n languages and tools used the project\u0026rsquo;s status and progress (e.g. beta, deprecated)  When relevant, indicate under what terms the project may be used. Name and link to the license or other appropriate document.\nHelp the reader use the project  What are the requirements? (e.g. hardware, OS, tooling, other dependencies) List the specific steps to install and use the project for the first time.  Extended instructions for day-to-day usage should go in a user guide and other dedicated docs.  Feel free to include examples and expected output. It is more helpful to include the \u0026ldquo;smallest\u0026rdquo; example of usage, and then provide links to docs containing longer and more detailed examples. This also applies to troubleshooting.  Help the reader engage with the project  Tell the reader where to go for additional documentation. This can include help commands, tutorials, and top-level README companion files such as LICENSE, CONTRIBUTING, CHANGELOG, etc.  Include a brief description of each, in addition to the link.  Tell the reader where to go for help. This includes issue trackers, forums, our Support team (available for paying customers), etc. Tell the reader how they can help. This includes linking to and summarizing a contributor\u0026rsquo;s guide, GitHub pull requests, channels for reporting issues and bugs, etc.  It might also be a good idea to include a quick roadmap or list ideas for future enhancements or releases.\nFinal Notes  Developers are the target audience here, but remember that they can still be unfamiliar with most (or all!) aspects of this project. If your README is long and contains several large sections, consider adding a table of contents at the beginning.  Acknowledgement These guidelines are adapted from Daniel D. Beck\u0026rsquo;s README Checklist.\n"
},
{
	"uri": "https://kbatuigas.github.io/content-guide-template/09-writing-blog-posts/",
	"title": "Writing Blog Posts",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "https://kbatuigas.github.io/content-guide-template/10-writing-for-the-learning-portal/",
	"title": "Writing for the Learning Portal",
	"tags": [],
	"description": "",
	"content": " The Crunchy Data [Learning Portal]() contains interactive tutorials for learning PostgreSQL. It provides a complete learning environment where the uesr can focus on \u0026ldquo;learning by doing\u0026rdquo; without needing to worry about setting up their own apps, utilities, etc. The learning portal is powered by Katacoda.\nGuidelines "
},
{
	"uri": "https://kbatuigas.github.io/content-guide-template/11-writing-for-accessibility/",
	"title": "Writing for Accessibility",
	"tags": [],
	"description": "",
	"content": " We’re always working to make our content more accessible and usable to the widest possible audience. Writing for accessibility goes way beyond making everything on the page available as text. It also affects the way you organize content and guide readers through a page. Depending on the audience and country, there may be laws governing the level of accessibility required. At minimum, an accessible version should be available. Accessibility includes users of all mental and physical capacities, whether situational (broken glasses!) or more permanent.\nBasics We write for a diverse audience of readers who all interact with our content in different ways. We aim to make our content accessible to anyone using a screen reader, keyboard navigation, or Braille interface, and to users of all cognitive capabilities.\nAs you write, consider the following:\n Would this language make sense to someone who doesn’t work here? Could someone quickly scan this document and understand the material? If someone can’t see the colors, images or video, is the message still clear? Is the markup clean and structured? Mobile devices with accessibility features are increasingly becoming core communication tools, does this work well on them?  Many of the best practices for writing for accessibility echo those for writing technical content, with the added complexity of markup, syntax, and structure.\nGuidelines Avoid directional language Avoid directional instructions and any language that requires the reader to see the layout or design of the page. This is helpful for many reasons, including layout changes on mobile.\n Yes: “Select from these options,” (with the steps listed after the title) No: “Select from the options in the right sidebar.”  Use headers Headers should always be nested and consecutive. Never skip a header level for styling reasons. To help group sections, be sure the page title is H1, top-level sections are H2s, and subsequent inside those are H3 and beyond. Avoid excessive nesting.\nEmploy a hierarchy Put the most important information first. Place similar topics in the same paragraph, and clearly separate different topics with headings.\nStarting with a simple outline that includes key messages can help you create a hierarchy and organize your ideas in a logical way. This improves scannability and encourages better understanding.\nMake true lists instead of using a paragraph or line breaks.\nUse descriptive links Links should provide information on the associated action or destination. Try to avoid “click here” or “learn more.”\nUse plain language Write short sentences and use familiar words. Avoid jargon and slang. If you need to use an abbreviation or acronym that people may not understand, explain what it means on first reference.\nUse alt text The alt tag is the most basic form of image description, and it should be included on all images. The language will depend on the purpose of the image:\n If it’s a creative photo or supports a story, describe the image in detail in a brief caption. If the image is serving a specific function, describe what’s inside the image in detail. People who don’t see the image should come away with the same information as if they had. If you’re sharing a chart or graph, include the data in the alt text so people have all the important information.  Each browser handles alt tags differently. Supplement images with standard captions when possible.\nMake sure closed captioning is available Closed captioning or transcripts should be available for all videos. The information presented in videos should also be available in other formats.\nBe mindful of visual elements Aim for high contrast between your font and background colors. Tools in the resources section should help with picking accessible colors.\nImages should not be the only method of communication, because images may not load or may not be seen. Avoid using images when the same information could be communicated in writing.\nResources  Accessibility cheatsheet 18F Accessibility Guide Designing for Screen Reader Compatibility Accessible color combinations WAVE Web Accessibility Evaluation Tool  "
},
{
	"uri": "https://kbatuigas.github.io/content-guide-template/12-word-list/",
	"title": "Word List",
	"tags": [],
	"description": "",
	"content": " These words can be slippery. Here’s how we write them. (If it’s not on this list, defer to the AP Style Guide.)\n   Words to avoid  master/slave (we use primary/replica) automagical funnel, incentivize, leverage, disruption, thought leader, or other fluffy corporate terms internets, interwebs, or any other variation of the word “internet” ninja, rockstar, wizard, unicorn (unless referring to a literal ninja, rockstar, wizard, or unicorn) young, old, elderly, or any other word describing a person\u0026rsquo;s age crazy, insane, or similar words to describe people  "
},
{
	"uri": "https://kbatuigas.github.io/content-guide-template/13-further-reading/",
	"title": "Further Reading",
	"tags": [],
	"description": "",
	"content": "This guide is based on the work done by Mailchimp on their style guide. (Here\u0026rsquo;s the style guide repository on GitHub.)\nWe also love these style guides:\n18F Content Guide\nBuzzfeed Style Guide\nA List Apart Style Guide\nThese resources were also helpful to us:\nAccessibility Cheatsheet\n18F Accessibility Guide\nDesigning for Screen Reader Compatibility\nAccessible Color Combinations\nWAVE Web Accessibility Evaluation Tool\nThe Conscious Style Guide\nGLAAD Media Reference Guide\n"
},
{
	"uri": "https://kbatuigas.github.io/content-guide-template/14-helpful-tools/",
	"title": "Helpful Tools",
	"tags": [],
	"description": "",
	"content": " text editor extensions (e.g. markdown linters) accessibility checkers   "
},
{
	"uri": "https://kbatuigas.github.io/content-guide-template/_header/",
	"title": "_Header",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "https://kbatuigas.github.io/content-guide-template/",
	"title": "Content Guide Template",
	"tags": [],
	"description": "",
	"content": " Welcome to the Crunchy Content Guide This is our company content guide. It helps us write clear and consistent content across teams and channels. Please use it as a reference when you’re writing for Crunchy Data.\nThis guide is based on the Mailchimp Content Style Guide (© Mailchimp 2019). The Mailchimp Content Style Guide project repository can be found on GitHub and is available under a Creative Commons Attribution-NonCommercial 4.0 International License.\n"
},
{
	"uri": "https://kbatuigas.github.io/content-guide-template/categories/",
	"title": "Categories",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "https://kbatuigas.github.io/content-guide-template/tags/",
	"title": "Tags",
	"tags": [],
	"description": "",
	"content": ""
}]